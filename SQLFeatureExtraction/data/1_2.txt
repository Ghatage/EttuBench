1;WITH t AS (SELECT DISTINCT id, course_id FROM takes NATURAL JOIN section) SELECT course.course_id, count(DISTINCT id) FROM course LEFT OUTER JOIN t ON (t.course_id = course.course_id) GROUP BY course.course_id
1;SELECT course_id, CASE WHEN count(DISTINCT id) IS NOT NULL THEN count(DISTINCT id) WHEN count(DISTINCT id) IS NULL THEN 0 END AS number_of_students FROM takes GROUP BY course_id
1;SELECT course_id, count(id) FROM (SELECT DISTINCT id, course_id FROM takes NATURAL JOIN course) a GROUP BY course_id
1;SELECT course_id, count(id) FROM takes GROUP BY course_id
1;SELECT course.course_id, (SELECT count(takes.course_id) FROM takes WHERE course.course_id = takes.course_id) AS num_students FROM course
3;SELECT course.course_id, (SELECT count(DISTINCT takes.id) FROM takes WHERE course.course_id = takes.course_id) FROM course
1;SELECT course_id, count(id) FROM course LEFT OUTER JOIN takes USING (course_id) GROUP BY course_id
1;SELECT course_id, 0 FROM (SELECT DISTINCT course_id, 0 FROM course) a
13;SELECT course_id, count(DISTINCT id) FROM takes GROUP BY course_id
1;SELECT DISTINCT course_id, (SELECT count(a.id) FROM takes AS a WHERE a.course_id = b.course_id) FROM takes AS b
1;SELECT course_id, count(DISTINCT id) FROM takes GROUP BY course_id UNION SELECT DISTINCT course_id, 0 FROM course WHERE course_id NOT IN (SELECT course_id FROM takes)
4;SELECT course_id, count(DISTINCT id) FROM student NATURAL JOIN takes GROUP BY course_id
1;WITH coursestaken AS (SELECT course_id, count(*) FROM (SELECT DISTINCT id, course_id FROM takes) a GROUP BY course_id) SELECT * FROM coursestaken UNION SELECT course.course_id, 0 FROM course WHERE course.course_id NOT IN (SELECT course_id FROM coursestaken)
1;SELECT course_id, count(*) FROM (SELECT DISTINCT id, course_id FROM takes) a GROUP BY course_id
1;WITH data AS (SELECT course.title, student.id FROM course, takes, student WHERE takes.id = student.id AND takes.course_id = course.course_id) SELECT DISTINCT data.id, (SELECT count(id) FROM data AS d WHERE d.title = data.title) AS students FROM data
2;SELECT course_id, count(course_id) FROM takes GROUP BY course_id
1;SELECT DISTINCT course_id, count(*) AS count FROM takes GROUP BY course_id
1;SELECT course.course_id, (SELECT count(*) FROM takes WHERE course.course_id = takes.course_id AND takes.grade <> '') AS num_students FROM course
1;SELECT * FROM (SELECT course_id, count(id) AS count FROM takes GROUP BY course_id) a
1;SELECT DISTINCT course.course_id, (SELECT count(DISTINCT takes.id) FROM takes WHERE takes.course_id = course.course_id) AS count_val FROM course
1;SELECT course_id, count(DISTINCT id) AS id FROM takes GROUP BY course_id UNION SELECT course_id, 0 AS id FROM course WHERE course_id NOT IN (SELECT course_id FROM takes)
2;SELECT course_id, count(*) AS students FROM takes GROUP BY course_id
1;WITH dis AS (SELECT DISTINCT takes.course_id, count(DISTINCT takes.id) FROM takes GROUP BY takes.course_id) SELECT course.course_id, 0 FROM course WHERE course.course_id NOT IN (SELECT course_id FROM dis) UNION SELECT * FROM dis
1;SELECT course.course_id, count(DISTINCT id) FROM takes RIGHT OUTER JOIN course ON (takes.course_id = course.course_id) GROUP BY course.course_id
1;WITH tab AS (SELECT course_id AS course_id FROM course NATURAL JOIN takes NATURAL JOIN student) SELECT DISTINCT course_id, count(*) FROM tab GROUP BY course_id UNION SELECT course.course_id, 0 FROM course, tab WHERE course.course_id NOT IN (SELECT course_id FROM tab)
2;WITH selected AS (SELECT course_id, count(DISTINCT id) FROM takes GROUP BY (course_id)) SELECT * FROM selected
1;SELECT course_id, count(*) FROM (SELECT DISTINCT course_id, takes.id FROM takes NATURAL JOIN section) a GROUP BY course_id
1;SELECT course_id, count(course_id) FROM (SELECT DISTINCT course_id, id FROM takes) a GROUP BY course_id
1;WITH taken_courses AS (SELECT course_id, count(*) FROM (SELECT DISTINCT id, course_id FROM takes) a GROUP BY course_id) SELECT * FROM taken_courses UNION SELECT DISTINCT course.course_id, 0 FROM course WHERE course.course_id NOT IN (SELECT course_id FROM taken_courses)
2;SELECT course.course_id, count(DISTINCT id) FROM takes RIGHT OUTER JOIN course ON (course.course_id = takes.course_id) GROUP BY course.course_id
1;SELECT DISTINCT course_id, count(id) FROM takes GROUP BY course_id
1;SELECT course_id, no_student FROM (SELECT course_id, count(*) AS no_student FROM takes GROUP BY course_id) a
1;WITH t AS (SELECT DISTINCT id, course_id FROM takes NATURAL JOIN section) SELECT course.course_id, count(*) FROM t RIGHT OUTER JOIN course ON (t.course_id = course.course_id) GROUP BY course.course_id
1;SELECT course_id, count(course_id) FROM takes GROUP BY course_id UNION SELECT course_id, 0 AS zero FROM course
1;SELECT course_id, count(DISTINCT id) FROM takes GROUP BY course_id UNION SELECT course_id, 0 AS credits FROM course WHERE course_id NOT IN (SELECT course_id FROM takes)
1;SELECT DISTINCT course_id, count(id) AS total_students FROM (SELECT * FROM section NATURAL JOIN takes) t GROUP BY course_id UNION SELECT DISTINCT course.course_id, 0 AS total_students FROM course WHERE course.course_id NOT IN (SELECT DISTINCT section.course_id FROM section)
2;SELECT course_id, count(course_id) FROM (SELECT DISTINCT id, course_id FROM takes) a GROUP BY course_id
2;SELECT course_id, 0 FROM course AS except
1;SELECT course_id, count(DISTINCT id) FROM takes GROUP BY course_id UNION SELECT DISTINCT course_id, 0 FROM course AS except
1;SELECT course_id, count(id) FROM (SELECT DISTINCT course.course_id, id FROM takes RIGHT OUTER JOIN course ON (takes.course_id = course.course_id)) a GROUP BY course_id
1;SELECT course_id, count(*) FROM (SELECT DISTINCT student.id AS id, takes.course_id AS course_id FROM student, takes WHERE takes.id = student.id) a GROUP BY course_id
1;SELECT DISTINCT course.course_id, (SELECT count(DISTINCT takes.id) FROM takes, student WHERE takes.course_id = course.course_id AND takes.id = student.id) FROM course
