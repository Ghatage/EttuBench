8;SELECT * FROM takes
1;WITH a AS (SELECT * FROM takes WHERE grade = '') SELECT DISTINCT id FROM takes AS except
7;SELECT * FROM takes WHERE grade IS NOT NULL
1;WITH t1 AS (SELECT * FROM takes) SELECT * FROM takes WHERE (grade IS NOT NULL) AND (grade <> '' OR (grade = '' AND (SELECT count(*) FROM t1 WHERE t1.course_id = course_id AND t1.id = id AND grade <> '') > 0))
1;SELECT * FROM takes WHERE grade IS NOT NULL AND ((grade <> '') OR (NOT EXISTS (SELECT * FROM takes AS take WHERE take.grade IS NOT NULL AND take.grade <> '' AND take.id = takes.id AND take.course_id = takes.course_id)))
7;SELECT * FROM takes WHERE grade <> ''
1;SELECT a.* FROM takes AS a, takes AS b WHERE a.id = b.id AND a.course_id = b.course_id AND ((a.grade <> '') OR (a.grade = '' AND b.grade <> '')) AND a.grade IS NOT NULL
5;SELECT * FROM takes WHERE grade IS NOT NULL AND grade <> ''
1;WITH a AS (SELECT DISTINCT * FROM takes WHERE grade = ''), b AS (SELECT DISTINCT * FROM a WHERE EXISTS (SELECT * FROM takes WHERE takes.id = a.id AND takes.course_id = a.course_id AND takes.grade IS NOT NULL AND takes.grade <> '')), c AS (SELECT DISTINCT * FROM takes WHERE grade IS NULL) SELECT DISTINCT * FROM takes AS except
1;SELECT * FROM takes AS a WHERE grade IS NOT NULL AND (grade <> '' OR NOT EXISTS (SELECT * FROM takes AS b WHERE a.id = b.id AND a.course_id = b.course_id AND (a.semester <> b.semester OR a.year <> b.year) AND a.grade <> b.grade))
1;SELECT * FROM takes AS t1 WHERE (t1.grade <> '' OR (SELECT id FROM takes AS t2 WHERE t1.course_id = t2.course_id AND t1.id = t2.id AND t2.grade <> '') IS NULL) AND grade IS NOT NULL
1;SELECT * FROM takes WHERE grade <> '' AND grade IS NOT NULL
2;WITH t AS (SELECT grade FROM takes WHERE grade IS NOT NULL AND grade <> '') SELECT * FROM takes WHERE (grade IS NOT NULL AND grade <> '') OR (grade = '' AND NOT EXISTS (SELECT grade FROM t))
1;WITH failstudents AS (SELECT * FROM takes WHERE grade = ''), passlater AS (SELECT id, course_id, takes.sec_id, takes.semester, takes.year, takes.grade FROM takes JOIN failstudents USING (id, course_id) WHERE NOT (takes.grade = '')), notselected AS (SELECT takes.id, takes.course_id, takes.sec_id, takes.semester, takes.year, takes.grade FROM takes, passlater WHERE (takes.id = passlater.id AND takes.course_id = passlater.course_id AND takes.grade <> passlater.grade) OR takes.grade IS NULL) SELECT * FROM (SELECT * FROM takes) a
1;WITH failed_takes AS (SELECT * FROM takes WHERE grade = '') SELECT takes.id, takes.course_id, takes.sec_id, takes.semester, takes.year, takes.grade FROM failed_takes, takes WHERE takes.id = failed_takes.id AND takes.grade <> ''
1;SELECT * FROM takes WHERE takes.grade IS NOT NULL AND (takes.grade <> '' OR (takes.grade = '' AND takes.id NOT IN (SELECT t.id FROM takes AS s, takes AS t WHERE s.id = t.id AND s.grade = '' AND t.grade <> '' AND s.course_id = t.course_id)))
1;SELECT id, course_id, semester, year, grade FROM takes AS t WHERE grade IS NOT NULL AND (NOT grade = '' OR (grade = '' AND grade IN (SELECT grade FROM takes AS s WHERE s.course_id = t.course_id AND NOT grade = '')))
1;SELECT * FROM takes AS t1 WHERE NOT ((t1.grade = '' AND EXISTS (SELECT * FROM takes AS t2 WHERE t1.id = t2.id AND t1.course_id = t2.course_id AND t2.grade <> '')) OR t1.grade IS NULL)
1;SELECT * FROM takes AS newtakes1 WHERE newtakes1.grade <> '' OR (SELECT newtakes1.id FROM takes AS newtakes2 WHERE newtakes1.id = newtakes2.id AND newtakes1.course_id = newtakes2.course_id AND newtakes2.grade <> '') IS NULL AND newtakes1.grade IS NOT NULL
1;WITH fail AS (SELECT DISTINCT * FROM takes WHERE grade = '' AND id IN (SELECT DISTINCT id FROM takes WHERE grade <> '')) SELECT DISTINCT * FROM takes WHERE grade IS NOT NULL
1;WITH a AS (SELECT * FROM takes WHERE grade IS NOT NULL AND grade <> ''), b AS (SELECT * FROM takes WHERE grade = '') SELECT * FROM a UNION SELECT * FROM b WHERE NOT EXISTS (SELECT a.id, a.course_id FROM a WHERE a.id = b.id AND a.course_id = b.course_id)
1;SELECT * FROM takes AS t1 WHERE t1.grade <> '' OR (SELECT t2.id FROM takes AS t2 WHERE t1.id = t2.id AND t1.course_id = t2.course_id AND t2.grade <> '') IS NULL AND t1.grade IS NOT NULL
1;WITH pass AS (SELECT * FROM takes AS t WHERE t.grade IS NOT NULL AND t.grade <> '') SELECT * FROM pass UNION SELECT * FROM takes AS t WHERE t.grade = '' AND t.id NOT IN (SELECT p.id FROM pass AS p)
1;SELECT DISTINCT * FROM takes AS t WHERE (grade <> '' OR NOT EXISTS (SELECT id, course_id FROM takes AS s WHERE grade <> '' AND t.id = s.id AND t.course_id = s.course_id)) AND t.grade IS NOT NULL
1;WITH val1 AS (SELECT takes.id, takes.course_id FROM takes WHERE takes.grade = ''), val2 AS (SELECT val1.id, val1.course_id FROM takes, val1 WHERE val1.id = takes.id AND val1.course_id = takes.course_id AND takes.grade <> ''), val3 AS (SELECT val1.id AS id, val1.course_id FROM val1, val2 WHERE val1.id <> val2.id) SELECT takes.id FROM takes, val3 WHERE takes.id <> val3.id
1;WITH s AS (SELECT * FROM takes WHERE grade IS NOT NULL) SELECT * FROM s AS except
1;SELECT * FROM takes WHERE grade <> '' UNION SELECT * FROM takes WHERE (SELECT id FROM takes WHERE grade = '') NOT IN (SELECT id FROM takes WHERE grade <> '') AND (SELECT course_id FROM takes WHERE grade = '') NOT IN (SELECT course_id FROM takes WHERE grade <> '')
1;WITH passed AS (SELECT * FROM takes WHERE grade <> '') SELECT * FROM passed UNION SELECT * FROM takes WHERE grade = '' AND course_id NOT IN (SELECT course_id FROM passed)
